#!/usr/bin/python3

"""
 Copyright 2017-2018 Ian Santopietro <isantop@gmail.com>

This Source Code Form is subject to the terms of the Mozilla Public
License, v. 2.0. If a copy of the MPL was not distributed with this
file, You can obtain one at https://mozilla.org/MPL/2.0/.

yklsetup - Command line client.
"""

import argparse
import logging
from logging import handlers
import os

import yklsetup

# Try detecting systemd support
SYSTEMD_SUPPORT = False
try:
    from systemd.journal import JournalHandler
    SYSTEMD_SUPPORT = True

except ImportError:
    pass

def main():
    user_home = yklsetup.system.get_user_home()
    parser = argparse.ArgumentParser(
        description='Set up a Yubikey login for GNOME desktop'
    )

    parser.add_argument(
        '-v',
        '--verbose',
        action="count",
        help='Increase program verbosity.'
    )

    slot = parser.add_mutually_exclusive_group()

    slot.add_argument(
        '-1',
        '--one',
        action='store_true',
        help=argparse.SUPPRESS
    )
    slot.add_argument(
        '-2',
        '--two',
        action='store_false',
        help=argparse.SUPPRESS
    )

    parser.add_argument(
        '-d',
        '--deauthorize',
        action='store_true',
        help='Remove Yubikey login.'
    )

    parser.add_argument(
        '-R',
        '--required',
        action='store_true',
        help='Makes the Yubikey required for login.'
    )

    args = parser.parse_args()

    level = {
        0 : logging.WARNING,
        1 : logging.INFO,
        2 : logging.DEBUG,
    }
    verbosity = 0
    if args.verbose:
        verbosity = args.verbose
    if verbosity >= 3:
        verbosity = 2
    console_level = level[verbosity]
    file_level = level[1]

    stream_fmt = logging.Formatter(
        '%(levelname)s: %(message)s')
    file_fmt = logging.Formatter(
        '%(asctime)s - %(name)s: %(levelname)s: %(message)s')
    log = logging.getLogger('yklsetup')

    console_log = logging.StreamHandler()
    console_log.setFormatter(stream_fmt)
    console_log.setLevel(console_level)

    log_path = os.path.join(user_home, '.log')
    os.makedirs(log_path, exist_ok=True)
    file_log = handlers.RotatingFileHandler(
        os.path.join(log_path, 'yklsetup.log'), maxBytes=(1048576*5), backupCount=5)
    file_log.setFormatter(file_fmt)
    file_log.setLevel(file_level)

    log.addHandler(console_log)
    log.addHandler(file_log)

    if SYSTEMD_SUPPORT:
        journald_log = JournalHandler()
        journald_log.setLevel(file_level)
        journald_log.setFormatter(stream_fmt)
        log.addHandler(journald_log)

    log.setLevel(logging.DEBUG)

    slot = 2
    if args.one:
        slot = 1
    
    if args.deauthorize:
        pass

    req = 'sufficient'
    if args.required:
        req = 'required'
    
    log.info('Setting up in slot %s', slot)
    yklsetup.yubikey.setup_slot(slot=slot)

    log.info('Creating initial challenge.')
    key = yklsetup.yubikey.make_config(user_home, slot=slot)
    log.debug(key)

    log.info('Ensuring the main system configuration directory exists.')
    yklsetup.system.ensure_sys_config_dir()

    challenge_path = f'/var/yubico/{yklsetup.system.get_username()}-{key[2]}'
    log.info('Moving initial challenge from %s to %s', key[0], challenge_path)
    yklsetup.system.privilged_move_file(key[0], challenge_path)

if __name__ == '__main__':
    main()
